pipeline {
    agent any
    stages {
        stage('Get Code') {
            agent { label 'principal' }
            steps {
                git 'https://github.com/karbono/unir1-a.git'
            }
        }
        stage('Build') {
            agent { label 'principal' }
            steps {
                dir('C:\\Users\\lacei\\AppData\\Local\\Jenkins\\.jenkins\\workspace\\P24\\Caso1ADeveloper'){
                    stash (name: 'testStashed')
                }
                echo 'Eyy esto es Python, nada que compilar!'
                echo WORKSPACE
                bat '''
			dir
			whoami
		'''
            }
        }
        stage('Tests') {
            parallel {
                stage('Unit') {
                    agent { label 'unit' }
                    steps {
                        dir('C:\\Users\\lacei\\AppData\\Local\\Jenkins\\.jenkins\\workspace\\P24\\Caso1ADeveloper'){
                            stash (name: 'unitResult')
                        }
                        unstash 'testStashed'
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
			    echo WORKSPACE
                            bat '''
			        whoami
				cd
                                SET FLASK_APP=%WORKSPACE%\\app\\api.py
                                start flask run
                                set PYTHONPATH=%WORKSPACE%
                                pytest --junitxml=%WORKSPACE%\\result-unit.xml %WORKSPACE%\\test\\unit
                            '''
                        }
                    }
                }
                stage('Rest') {
                    agent { label 'rest' }
                    steps {
                        dir('C:\\Users\\lacei\\AppData\\Local\\Jenkins\\.jenkins\\workspace\\P24\\Caso1ADeveloper'){
                            stash (name: 'restResult')
                        }
                        unstash 'testStashed'
			echo WORKSPACE
                        bat '''
                            whoami
                            cd
                            SET FLASK_APP=%WORKSPACE%\\app\\api.py
                            start flask run
                            SET PYTHONPATH=%WORKSPACE%
                            start java -jar %WORKSPACE\\wiremock-standalone-3.5.3.jar --port 9090 --root-dir %WORKSPACE%\\test\\wiremock
                            pytest --junitxml=%WORKSPACE%\\result-rest.xml %WORKSPACE%\\test\\rest
                        '''
                    }
                }
            }
        }
        stage('Results') {
            agent { label 'principal' }
            steps {
                unstash 'unitResult'
                unstash 'restResult'
                dir('C:\\Users\\lacei\\Documents\\AgentesJenkins\\Agent2\\workspace\\P24\\Caso1ADeveloper'){
                    junit testResults: 'result*.xml'
                }
                dir('C:\\Users\\lacei\\Documents\\AgentesJenkins\\Agent1\\workspace\\P24\\Caso1ADeveloper'){
                    junit testResults: 'result*.xml'
		
                }
            }
        }
    }
    post {
        // Clean after build
        always {
            cleanWs(cleanWhenNotBuilt: false,
                    deleteDirs: true,
                    disableDeferredWipeout: true,
                    notFailBuild: true,
                    patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
                               [pattern: '.propsfile', type: 'EXCLUDE']])
        }
    }
}   
